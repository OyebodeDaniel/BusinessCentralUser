{
	"info": {
		"_postman_id": "954db479-06b6-4e98-85a3-27e70363bd90",
		"name": "ReadyForCICD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27708868"
	},
	"item": [
		{
			"name": "User Auth",
			"item": [
				{
					"name": "Register",
					"item": [
						{
							"name": "RegisterUser - No CompanyName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Register User - No CompanyName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyName field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"\",\r\n  \"rcNumber\": \"AB123456\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"string\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No RCNumber",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Register User - No RCNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The RCNumber field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"string\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No industryType",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Register User - No industryType\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The IndustryType field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"string\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No CompanyEmail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Register User - No CompanyEmail\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyEmail field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"\",\r\n  \"companyPhoneNumber\": \"string\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Invalid CompanyEmail",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Register User - No CompanyEmail\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyEmail field is not a valid e-mail address.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"JohnDoe@\",\r\n  \"companyPhoneNumber\": \"string\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No companyPhoneNumber",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No companyPhoneNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyPhoneNumber field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Incomplete companyPhoneNumber ???",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - Incomplete companyPhoneNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyPhoneNumber field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0904565\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Invalid companyPhoneNumber ???",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - Invalid companyPhoneNumber\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CompanyPhoneNumber field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"09045!@@#@A\",\r\n  \"address\": \"Ul Okopowa\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No Address",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No Address\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Address field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"\",\r\n  \"state\": \"Lodz\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No State",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No Address\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The State field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No FirstName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No FirstName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The FirstName field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No LastName",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No LastName\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The LastName field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No roleCategory",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No roleCategory\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The RoleCategory field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Email field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Invalid Email",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - Invalid Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Email field is not a valid e-mail address.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"JohnDoe@\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - No Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - No Password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Password field is required\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Invalid Password",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - Invalid Password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Passwords must have at least one digit ('0'-'9').\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"password\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - False agreeToAllPolicies",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"RegisterUser - False agreeToAllPolicies\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Kindly Agree to All Policies to Continue\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"A12349876\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"Password@1\",\r\n  \"agreeToAllPolicies\": false\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "RegisterUser - Successful",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var emailAddress = pm.variables.replaceIn('{{$randomFirstName}}') + pm.variables.replaceIn('{{$randomLastName}}') + \"@mailinatory.com\";\r",
											"pm.environment.set(\"email\",emailAddress);\r",
											"\r",
											"let min = 8020000000;\r",
											"let max = 8099999999;\r",
											"let Answer = Math.round(Math.random() * (max - min) + min)\r",
											"pm.environment.set(\"phone\", Answer);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Register User - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Approved or Completed Successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"companyName\": \"{{$randomFirstName}}{{$randomFirstName}}\",\r\n  \"rcNumber\": \"AB123456\",\r\n  \"industryType\": \"Sport\",\r\n  \"companyEmail\": \"{{email}}\",\r\n  \"companyPhoneNumber\": \"0{{phone}}\",\r\n  \"address\": \"{{$randomStreetAddress}}\",\r\n  \"state\": \"{{$randomStreetName}}\",\r\n  \"firstName\": \"{{$randomFirstName}}\",\r\n  \"lastName\": \"{{$randomLastName}}\",\r\n  \"roleCategory\": \"Director\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"agreeToAllPolicies\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/RegisterUser",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"RegisterUser"
									]
								}
							},
							"response": []
						},
						{
							"name": "Admin Login",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"ADMIN_TOKEN\", pm.response.json().token);\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Admin Login - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Login Successful\");\r",
											"});\r",
											"pm.test(\"Admin Login - Admin role is returned\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.role).to.eql(\"Admin\");\r",
											"});\r",
											"pm.test(\"Admin Login - Admin email is returned\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.result.email).to.not.null;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin@gmail.com\",\r\n  \"password\": \"Admin*123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/AdminAuth/Login",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"AdminAuth",
										"Login"
									],
									"query": [
										{
											"key": "x-correlation-id",
											"value": "",
											"disabled": true
										},
										{
											"key": "product_id",
											"value": "",
											"disabled": true
										},
										{
											"key": "client_id",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Company Detail by Name/Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.environment.set(\"CompanyID\", pm.response.json().data[0].id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{BaseUrl}}/api/Users/search-companies-details-by-name-or-email?NameOrEmail={{email}}",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"search-companies-details-by-name-or-email"
									],
									"query": [
										{
											"key": "NameOrEmail",
											"value": "{{email}}"
										},
										{
											"key": "PageNumber",
											"value": "",
											"disabled": true
										},
										{
											"key": "PageSize",
											"value": "",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Approve-user-company",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Approve User Company - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Operation Successful\");\r",
											"});\r",
											"pm.test(\"Approve User Company - Approval message is displayed\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.company).to.not.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{ADMIN_TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": \"{{CompanyID}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BaseUrl}}/api/Users/approve-user-company",
									"host": [
										"{{BaseUrl}}"
									],
									"path": [
										"api",
										"Users",
										"approve-user-company"
									],
									"query": [
										{
											"key": "x-correlation-id",
											"value": null,
											"disabled": true
										},
										{
											"key": "product_id",
											"value": null,
											"disabled": true
										},
										{
											"key": "client_id",
											"value": null,
											"disabled": true
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Login",
					"item": [
						{
							"name": "Login - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"{\r",
											"pm.environment.set(\"TOKEN\", pm.response.json().data.token);\r",
											"}\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Login - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Approved or Completed Successfully\");\r",
											"});\r",
											"pm.test(\"Login - Username is returned\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.username).to.contains(pm.environment.get(\"email\"));\r",
											"});\r",
											"pm.test(\"Login - Refresh Token is returned\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.refreshToken).to.not.empty;\r",
											"});\r",
											"pm.test(\"Login - User role is returned\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.data.roles).to.not.empty;\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - No Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - No Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Format Error : The Email field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"Password@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - Invalid Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Email field is not a valid e-mail address.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"@gmail.com\",\r\n  \"password\": \"Password@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Unregistered Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - Unregistered Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Email or password do not match for an existing user\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"JohnDoeWrong@gmail.com\",\r\n  \"password\": \"Password@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Inactive Company Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - Inactive Company Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Login failed - Your company account is not active.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"Dooley@mailinatory.com\",\r\n  \"password\": \"Password@1\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - No Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - No Password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Format Error : The Password field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login - Wrong Password",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Login - Wrong Password\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Email or password do not match for an existing user\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"dasl*()\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/Login",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"Login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Forgot Password",
					"item": [
						{
							"name": "Forgot Password - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Forgot Password - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"A password reset link would be sent to the email address if it exist\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{email}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ForgotPassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ForgotPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Forgot Password - No Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Forgot Password - No Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Format Error : The Email field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ForgotPassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ForgotPassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Forgot Password - Invalid Email",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Forgot Password - No Email\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The Email field is not a valid e-mail address.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"JhonDoe@\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ForgotPassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ForgotPassword"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reset Password",
					"item": [
						{
							"name": "Reset Password",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"password\": \"string\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ResetPassword?email=&emailToken=",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ResetPassword"
									],
									"query": [
										{
											"key": "email",
											"value": "",
											"description": "Required"
										},
										{
											"key": "emailToken",
											"value": "",
											"description": "Required"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Change Password",
					"item": [
						{
							"name": "Change Password - Successful",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Change Password - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Password was changed successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"{{password}}\",\r\n  \"newPassword\": \"{{newPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password - No currentPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Change Password - No currentPassword\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The CurrentPassword field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"\",\r\n  \"newPassword\": \"{{newPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password - Incorrect currentPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Change Password - Incorrect currentPassword\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Incorrect password.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"password\",\r\n  \"newPassword\": \"{{newPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password - No newPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Change Password - No NewPassword\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"The NewPassword field is required.\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"{{password}}\",\r\n  \"newPassword\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password - Invalid newPassword",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"pm.test(\"Change Password - Invalid NewPassword\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.eql(\"Incorrect password.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"{{password}}\",\r\n  \"newPassword\": \"passw\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password - No Auth",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"pm.test(\"Change Password - No Auth\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"unauthorised\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"{{password}}\",\r\n  \"newPassword\": \"{{newPassword}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						},
						{
							"name": "Change Password Back",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"pm.test(\"Change Password - Successful\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.description).to.contains(\"Password was changed successfully\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{TOKEN}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"currentPassword\": \"{{newPassword}}\",\r\n  \"newPassword\": \"{{password}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseurl}}/UserAuth/ChangePassword",
									"host": [
										"{{baseurl}}"
									],
									"path": [
										"UserAuth",
										"ChangePassword"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}